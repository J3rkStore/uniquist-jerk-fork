{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Walden Light\\\\Desktop\\\\bootcamp\\\\uniquist\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MATCHUPS } from '../utils/queries';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  mainDivStyles: {\n    margin: \"2% 8%\",\n    padding: '20px 30px',\n    backgroundColor: '#A569BD',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  formStyles: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '300px'\n  },\n  inputStyles: {\n    margin: '10px 0px',\n    border: 'none',\n    padding: '8px 8px',\n    borderRadius: '5px',\n    width: '80%'\n  },\n  imageStyle: {\n    width: '300px',\n    margin: '10px 0px',\n    border: '6px solid #A569BD'\n  }\n};\nconst Home = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_MATCHUPS, {\n    fetchPolicy: \"no-cache\"\n  });\n  const matchupList = (data === null || data === void 0 ? void 0 : data.matchups) || [];\n  const handleInputChange = e => {\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n    if (inputType === 'prompt') {\n      setPrompt(inputValue);\n    }\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (!prompt) {\n      setErrorMessage('No prompt entered');\n      return;\n    }\n\n    // Create array with words in prompt\n\n    const promptArray = prompt.split(' ');\n\n    // Make API calls with words in array\n\n    const bandNameArray = [];\n    for (let i = 0; i < promptArray.length; i++) {\n      const word = promptArray[i];\n      const request = require('request');\n      request.get({\n        url: 'https://api.api-ninjas.com/v1/thesaurus?word=' + word,\n        headers: {\n          'X-Api-Key': '5Ayl23OqevNqajXiMG1rxQ==HM7LlqV7uVkR13kj'\n        }\n      }, function (error, response, body) {\n        if (error) return console.error('Request failed:', error);else if (response.statusCode != 200) return console.error('Error:', response.statusCode, body.toString('utf8'));else console.log(body);\n        bandNameArray += body.synonyms[getRandomInt(3)];\n      });\n    }\n\n    // Create a new array based on return from API, randomly select 1-3 words\n\n    // Return result\n\n    if (!prompt) {\n      setErrorMessage('No name entered');\n      return;\n    }\n    setPrompt('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-white card-rounded w-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Band Name Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: styles.inputStyles,\n          value: [prompt],\n          name: \"prompt\",\n          onChange: handleInputChange,\n          type: \"prompt\",\n          placeholder: \"prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-danger\",\n          onClick: handleFormSubmit,\n          children: \"Create Matchup!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"cxg+kGgkTBPhsWVxTtiuuKiXce8=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Link","useQuery","QUERY_MATCHUPS","React","useState","jsxDEV","_jsxDEV","styles","mainDivStyles","margin","padding","backgroundColor","color","display","flexDirection","alignItems","formStyles","width","inputStyles","border","borderRadius","imageStyle","Home","_s","prompt","setPrompt","errorMessage","setErrorMessage","loading","data","fetchPolicy","matchupList","matchups","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault","promptArray","split","bandNameArray","i","length","word","request","require","get","url","headers","error","response","body","console","statusCode","toString","log","synonyms","getRandomInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onChange","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Walden Light/Desktop/bootcamp/uniquist/client/src/pages/Home.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MATCHUPS } from '../utils/queries';\nimport React, { useState } from 'react';\n\nconst styles = {\n  mainDivStyles: {\n    margin: \"2% 8%\",\n    padding: '20px 30px',\n    backgroundColor: '#A569BD',\n    color: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  formStyles: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '300px'\n  },\n  inputStyles: {\n    margin: '10px 0px',\n    border: 'none',\n    padding: '8px 8px',\n    borderRadius: '5px',\n    width: '80%'\n  },\n  imageStyle: {\n    width: '300px',\n    margin: '10px 0px',\n    border: '6px solid #A569BD'\n  }\n};\n\nconst Home = () => {\n  const [prompt, setPrompt] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    fetchPolicy: \"no-cache\"\n  });\n\n  const matchupList = data?.matchups || [];\n\n  const handleInputChange = (e) => {\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    if (inputType === 'prompt') {\n      setPrompt(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (!prompt) {\n      setErrorMessage('No prompt entered');\n      return;\n    }\n\n    // Create array with words in prompt\n\n    const promptArray = prompt.split(' ');\n\n    // Make API calls with words in array\n    \n    const bandNameArray = []\n\n    for (let i = 0; i < promptArray.length; i++) {\n      const word = promptArray[i];\n\n      const request = require('request');\n      request.get({\n        url: 'https://api.api-ninjas.com/v1/thesaurus?word=' + word,\n        headers: {\n          'X-Api-Key': '5Ayl23OqevNqajXiMG1rxQ==HM7LlqV7uVkR13kj'\n        },\n      }, function (error, response, body) {\n        if (error) return console.error('Request failed:', error);\n        else if (response.statusCode != 200) return console.error('Error:', response.statusCode, body.toString('utf8'));\n        else console.log(body)\n        bandNameArray += body.synonyms[getRandomInt(3)]\n      });\n\n\n    }\n\n    // Create a new array based on return from API, randomly select 1-3 words\n\n    // Return result\n\n    if (!prompt) {\n      setErrorMessage('No name entered');\n      return;\n    }\n\n    setPrompt('');\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      {/* <div className=\"card-header bg-dark text-center\">\n        <h1>Band Name Generator</h1>\n      </div>\n      <div className=\"card-body m-5\">\n        <h2>Here is a list of matchups you can vote on:</h2>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ul className=\"square\">\n            {matchupList.map((matchup) => {\n              return (\n                <li key={matchup._id}>\n                  <Link to={{ pathname: `/matchup/${matchup._id}` }}>\n                    {matchup.tech1} vs. {matchup.tech2}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div> */}\n      <div className=\"card-footer text-center\">\n        <h2>Band Name Generator</h2>\n        <form>\n          {/* <Link to=\"/matchup\"> */}\n          <input\n            style={styles.inputStyles}\n            value={[prompt]}\n            name=\"prompt\"\n            onChange={handleInputChange}\n            type=\"prompt\"\n            placeholder=\"prompt\"\n          />\n          <button className=\"btn btn-lg btn-danger\" onClick={handleFormSubmit}>Create Matchup!</button>\n          {/* </Link> */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}